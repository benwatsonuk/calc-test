@import "../variables.scss";

.buttons {
  display: grid;
  grid-template-columns: auto auto auto auto;
  grid-template-rows: auto auto auto auto;
  align-content: center;
  grid-template-areas: 'numeric7 numeric8 numeric9 operatorMultiply' 'numeric4 numeric5 numeric6 operatorDivide' 'numeric1 numeric2 numeric3 operatorMinus' 'numeric0 operatorCancel operatorEquals operatorPlus';

  .calc__button {
    height: 4em;
    text-align: center;
    font-size: 2em;
    border: none;
    padding: 0;
    font-family: inherit;
    user-select: none;
    cursor: pointer;
    outline: none;
    box-shadow: inset 0 0 1px 0 rgba(0,0,0,0.2);
    @media only screen and (min-width: $minWidth) {
      width: $buttonWidth;
      height: $buttonHeight;
    }

    &:focus {
      box-shadow: inset 0 0 0 2px rgba(0, 0, 0, 0.15);
    }
    &:focus:active {
      box-shadow: inset 0 0 130px 0 rgba(0, 0, 0, 0.15);
    }

    &--numeric {
      background: white;

      &:nth-child(1) {
        width: 100%;
        grid-area: numeric0;
      }

      &:nth-child(2) {
        grid-area: numeric1;
      }

      &:nth-child(3) {
        grid-area: numeric2;
      }

      &:nth-child(4) {
        grid-area: numeric3;
      }

      &:nth-child(5) {
        grid-area: numeric4;
      }

      &:nth-child(6) {
        grid-area: numeric5;
      }

      &:nth-child(7) {
        grid-area: numeric6;
      }

      &:nth-child(8) {
        grid-area: numeric7;
      }

      &:nth-child(9) {
        grid-area: numeric8;
      }

      &:nth-child(10) {
        grid-area: numeric9;
      }

    }

    &--operator {
      background: transparent;
      color: #fff;

      &:before {
        //font-size: 2em;
        display: block;
        height: 100%;
        width: 100%;
        line-height: $buttonHeight;
      }

      .calc__button--value {
        @extend .sr-only
      }

      &:nth-child(11) {
        grid-area: operatorPlus;

        &:before {
          content: "+";
        }
      }

      &:nth-child(12) {
        grid-area: operatorMinus;

        &:before {
          content: "−";
        }
      }

      &:nth-child(13) {
        grid-area: operatorMultiply;

        &:before {
          content: "×";
        }
      }

      &:nth-child(14) {
        grid-area: operatorDivide;

        &:before {
          content: "÷";
        }
      }

      &:nth-child(15) {
        grid-area: operatorEquals;
        width: 100%;

        &:before {
          content: "=";
        }
      }

      &:nth-child(16) {
        grid-area: operatorCancel;
        background: #ccc;
        color: #333;

        &:before {
          content: "C";
        }
      }

    }
  }
}
